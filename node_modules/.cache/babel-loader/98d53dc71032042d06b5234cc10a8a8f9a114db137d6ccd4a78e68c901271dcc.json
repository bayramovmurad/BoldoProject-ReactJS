{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import{initialStates}from\"./initialState\";export var MainReducer=createSlice({name:'MAIN_SLICE',initialState:initialStates,reducers:{changeStateValue:function changeStateValue(state,action){// console.log(action);\nstate[action.payload.name]=action.payload.value;var check=action.payload.name.includes('.');if(!check){state[action.payload.name]=action.payload.value;}else{var groups=action.payload.name.split('.');console.log(groups);if(groups.length==2){state[groups[0]][groups[1]]=action.payload.value;}else if(groups.length==3){state[groups[0]][groups[1]][groups[2]]=action.payload.value;}else if(groups.length==4){state[groups[0]][groups[1]][groups[2]][groups[3]]=action.payload.value;}}// state.username=action.payload\n}}});export var Data=MainReducer.reducer;var changeStateValue=MainReducer.actions.changeStateValue;export{changeStateValue};","map":{"version":3,"names":["createSlice","initialStates","MainReducer","name","initialState","reducers","changeStateValue","state","action","payload","value","check","includes","groups","split","console","log","length","Data","reducer","actions"],"sources":["/Users/muradbayramov/Documents/ReactRealProject/ReactFinish/finish-project/src/reduxx/MainReducer.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport { initialStates } from \"./initialState\";\r\n\r\n\r\nexport const MainReducer=createSlice({\r\n    name:'MAIN_SLICE',\r\n    initialState:initialStates,\r\n    reducers:{\r\n        changeStateValue:(state,action)=>{\r\n            // console.log(action);\r\n            state[action.payload.name]=action.payload.value\r\n            const check =action.payload.name.includes('.')\r\n            if (!check) {\r\n                state[action.payload.name]=action.payload.value\r\n            }else{\r\n                const groups=action.payload.name.split('.')\r\n                console.log(groups);\r\n                if(groups.length==2){\r\n                    state[groups[0]][groups[1]]=action.payload.value;\r\n                }else if(groups.length==3){\r\n                    state[groups[0]][groups[1]][groups[2]]=action.payload.value;\r\n                }else if(groups.length==4){\r\n                    state[groups[0]][groups[1]][groups[2]][groups[3]]=action.payload.value;\r\n                }\r\n            }\r\n            // state.username=action.payload\r\n        }\r\n    }\r\n});\r\n\r\nexport const Data =MainReducer.reducer;\r\nexport const {changeStateValue}=MainReducer.actions;"],"mappings":"AAAA,OAAQA,WAAW,KAAO,kBAAkB,CAC5C,OAASC,aAAa,KAAQ,gBAAgB,CAG9C,MAAO,IAAMC,YAAW,CAACF,WAAW,CAAC,CACjCG,IAAI,CAAC,YAAY,CACjBC,YAAY,CAACH,aAAa,CAC1BI,QAAQ,CAAC,CACLC,gBAAgB,CAAC,0BAACC,KAAK,CAACC,MAAM,CAAG,CAC7B;AACAD,KAAK,CAACC,MAAM,CAACC,OAAO,CAACN,IAAI,CAAC,CAACK,MAAM,CAACC,OAAO,CAACC,KAAK,CAC/C,GAAMC,MAAK,CAAEH,MAAM,CAACC,OAAO,CAACN,IAAI,CAACS,QAAQ,CAAC,GAAG,CAAC,CAC9C,GAAI,CAACD,KAAK,CAAE,CACRJ,KAAK,CAACC,MAAM,CAACC,OAAO,CAACN,IAAI,CAAC,CAACK,MAAM,CAACC,OAAO,CAACC,KAAK,CACnD,CAAC,IAAI,CACD,GAAMG,OAAM,CAACL,MAAM,CAACC,OAAO,CAACN,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAC3CC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC,CACnB,GAAGA,MAAM,CAACI,MAAM,EAAE,CAAC,CAAC,CAChBV,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACL,MAAM,CAACC,OAAO,CAACC,KAAK,CACpD,CAAC,IAAK,IAAGG,MAAM,CAACI,MAAM,EAAE,CAAC,CAAC,CACtBV,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACL,MAAM,CAACC,OAAO,CAACC,KAAK,CAC/D,CAAC,IAAK,IAAGG,MAAM,CAACI,MAAM,EAAE,CAAC,CAAC,CACtBV,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACA,MAAM,CAAC,CAAC,CAAC,CAAC,CAACL,MAAM,CAACC,OAAO,CAACC,KAAK,CAC1E,CACJ,CACA;AACJ,CACJ,CACJ,CAAC,CAAC,CAEF,MAAO,IAAMQ,KAAI,CAAEhB,WAAW,CAACiB,OAAO,CAC/B,GAAOb,iBAAgB,CAAEJ,WAAW,CAACkB,OAAO,CAArCd,gBAAgB,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}